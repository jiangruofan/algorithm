class Solution:
    def minMalwareSpread(self, graph: List[List[int]], initial: List[int]) -> int:
        n = len(graph)
        fa = [i for i in range(n)]

        def find(node):
            if fa[node] == node:
                return node
            fa[node] = find(fa[node])
            return fa[node]

        def union(x, y):
            fa1 = find(x)
            fa2 = find(y)
            if fa1 != fa2:
                fa[fa1] = fa2

        for i in range(n):
            for j in range(n):
                if graph[i][j]:
                    union(i, j)

        min1 = min(initial)
        initial = set(initial)
        res = -1
        max1 = -1
        for cur in initial:
            total = 0
            judge = False
            for node in range(n):
                if node == cur:
                    continue
                if find(node) == find(cur):
                    if node in initial:
                        judge = True
                        break
                    total += 1
            if not judge:
                if total == max1 and cur < res:
                    res = cur
                elif total > max1:
                    max1 = total
                    res = cur
        return res if res != -1 else min1
