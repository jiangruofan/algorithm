class Solution:
    def minMalwareSpread(self, graph: List[List[int]], initial: List[int]) -> int:
        n = len(graph)

        dic = defaultdict(list)
        for i in range(n):
            for j in range(n):
                if graph[i][j] and i != j:
                    dic[i].append(j)

        initial = set(initial)

        def bfs(node, limit):
            nonlocal x
            seen = set([node, limit])
            deq = deque([node])
            cnt = 0
            judge = True
            while deq:
                get = deq.popleft()
                cnt += 1
                if get in x:
                    x.remove(get)
                if get in initial:
                    judge = False
                for val in dic[get]:
                    if val not in seen:
                        deq.append(val)
                        seen.add(val)
            return cnt if judge else -1

        res = -1
        max1 = -1
        for val in initial:
            x = set(dic[val])
            cnt = 0
            while x:
                val1 = x.pop()
                get = bfs(val1, val)
                if get == -1:
                    continue
                cnt += get

            if cnt == max1 and val < res:
                res = val
            elif cnt > max1:
                max1 = cnt
                res = val
        return res
